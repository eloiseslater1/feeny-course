Interpreting Bytecode Program:
Constants :
   #0: String("conseq36")
   #1: String("end37")
   #2: Int(1)
   #3: String("eq")
   #4: Int(2)
   #5: String("div")
   #6: String("add")
   #7: String("sub")
   #8: String("get")
   #9: String("conseq38")
   #10: String("end39")
   #11: String("lt")
   #12: String("bshelper")
   #13: String("conseq40")
   #14: String("end41")
   #15: Int(-1)
   #16: Method(#12, nargs:4, nlocals:2) :
         get local 2
         lit #2
         call-slot #3 2
         branch #0
         get local 2
         lit #4
         call-slot #5 2
         set local 4
         drop
         get local 0
         get local 1
         get local 4
         call-slot #6 2
         lit #2
         call-slot #7 2
         call-slot #8 2
         set local 5
         drop
         get local 5
         get local 3
         call-slot #11 2
         branch #9
         get local 0
         get local 1
         get local 4
         get local 3
         call #12 4
         goto #10
      label #9
         get local 0
         get local 1
         get local 4
         call-slot #6 2
         get local 2
         get local 4
         call-slot #7 2
         get local 3
         call #12 4
      label #10
         goto #1
      label #0
         get local 0
         get local 1
         call-slot #8 2
         get local 3
         call-slot #3 2
         branch #13
         lit #15
         goto #14
      label #13
         get local 1
      label #14
      label #1
         return
   #17: String("conseq42")
   #18: String("end43")
   #19: String("length")
   #20: Int(0)
   #21: String("bs")
   #22: Method(#21, nargs:2, nlocals:0) :
         get local 0
         call-slot #19 1
         lit #20
         call-slot #3 2
         branch #17
         get local 0
         lit #20
         get local 0
         call-slot #19 1
         get local 1
         call #12 4
         goto #18
      label #17
         lit #15
      label #18
         return
   #23: Int(10)
   #24: String("a")
   #25: Slot(#24)
   #26: Int(4)
   #27: String("set")
   #28: Int(6)
   #29: Int(9)
   #30: Int(3)
   #31: Int(13)
   #32: Int(15)
   #33: Int(5)
   #34: Int(17)
   #35: Int(18)
   #36: Int(7)
   #37: Int(24)
   #38: Int(8)
   #39: Int(29)
   #40: Int(35)
   #41: String("The index of ~ in a is ~.\n")
   #42: String("find")
   #43: Method(#42, nargs:1, nlocals:0) :
         get local 0
         get global #24
         get local 0
         call #21 2
         printf #41 2
         return
   #44: Int(14)
   #45: Int(30)
   #46: Null
   #47: String("entry44")
   #48: Method(#47, nargs:0, nlocals:0) :
         lit #23
         lit #20
         array
         set global #24
         drop
         get global #24
         lit #20
         lit #26
         call-slot #27 3
         drop
         get global #24
         lit #2
         lit #28
         call-slot #27 3
         drop
         get global #24
         lit #4
         lit #29
         call-slot #27 3
         drop
         get global #24
         lit #30
         lit #31
         call-slot #27 3
         drop
         get global #24
         lit #26
         lit #32
         call-slot #27 3
         drop
         get global #24
         lit #33
         lit #34
         call-slot #27 3
         drop
         get global #24
         lit #28
         lit #35
         call-slot #27 3
         drop
         get global #24
         lit #36
         lit #37
         call-slot #27 3
         drop
         get global #24
         lit #38
         lit #39
         call-slot #27 3
         drop
         get global #24
         lit #29
         lit #40
         call-slot #27 3
         drop
         lit #31
         call #42 1
         drop
         lit #44
         call #42 1
         drop
         lit #32
         call #42 1
         drop
         lit #39
         call #42 1
         drop
         lit #45
         call #42 1
         drop
         lit #46
         return
Globals :
   #16
   #22
   #25
   #43
Entry : #48   get local 2   lit #2   call-slot #3 2   branch #0   get local 2   lit #4   call-slot #5 2   set local 4   drop   get local 0   get local 1   get local 4   call-slot #6 2   lit #2   call-slot #7 2   call-slot #8 2   set local 5   drop   get local 5   get local 3   call-slot #11 2   branch #9   get local 0   get local 1   get local 4   get local 3   call #12 4   goto #10label #9   get local 0   get local 1   get local 4   call-slot #6 2   get local 2   get local 4   call-slot #7 2   get local 3   call #12 4label #10   goto #1label #0   get local 0   get local 1   call-slot #8 2   get local 3   call-slot #3 2   branch #13   lit #15   goto #14label #13   get local 1label #14label #1   return   get local 0   call-slot #19 1   lit #20   call-slot #3 2   branch #17   get local 0   lit #20   get local 0   call-slot #19 1   get local 1   call #12 4   goto #18label #17   lit #15label #18   return   get local 0   get global #24   get local 0   call #21 2   printf #41 2   return   lit #23   lit #20   array   set global #24   drop   get global #24   lit #20   lit #26   call-slot #27 3   drop   get global #24   lit #2   lit #28   call-slot #27 3   drop   get global #24   lit #4   lit #29   call-slot #27 3   drop   get global #24   lit #30   lit #31   call-slot #27 3   drop   get global #24   lit #26   lit #32   call-slot #27 3   drop   get global #24   lit #33   lit #34   call-slot #27 3   drop   get global #24   lit #28   lit #35   call-slot #27 3   drop   get global #24   lit #36   lit #37   call-slot #27 3   drop   get global #24   lit #38   lit #39   call-slot #27 3   drop   get global #24   lit #29   lit #40   call-slot #27 3   drop   lit #31   call #42 1   drop   lit #44   call #42 1   drop   lit #32   call #42 1   drop   lit #39   call #42 1   drop   lit #45   call #42 1   drop   lit #46   returnSTACK: 
frame ins
STACK: 
int ins: tag: 0, val: 10
STACK: int: 10, 
int ins: tag: 0, val: 0
STACK: int: 10, int: 0, 
array
STACK: (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, )
set global : 0
int genv: 10STACK: (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, )
drop ins
STACK: 
get global : 0
STACK: (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, )
int ins: tag: 0, val: 0
STACK: (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, )int: 0, 
int ins: tag: 0, val: 4
STACK: (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, )int: 0, int: 4, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 0, 0, 0, 0, 0, 0, 0, 0, 0, )
int ins: tag: 0, val: 1
STACK: (4, 0, 0, 0, 0, 0, 0, 0, 0, 0, )int: 1, 
int ins: tag: 0, val: 6
STACK: (4, 0, 0, 0, 0, 0, 0, 0, 0, 0, )int: 1, int: 6, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 0, 0, 0, 0, 0, 0, 0, 0, )
int ins: tag: 0, val: 2
STACK: (4, 6, 0, 0, 0, 0, 0, 0, 0, 0, )int: 2, 
int ins: tag: 0, val: 9
STACK: (4, 6, 0, 0, 0, 0, 0, 0, 0, 0, )int: 2, int: 9, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 0, 0, 0, 0, 0, 0, 0, )
int ins: tag: 0, val: 3
STACK: (4, 6, 9, 0, 0, 0, 0, 0, 0, 0, )int: 3, 
int ins: tag: 0, val: 13
STACK: (4, 6, 9, 0, 0, 0, 0, 0, 0, 0, )int: 3, int: 13, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 13, 0, 0, 0, 0, 0, 0, )
int ins: tag: 0, val: 4
STACK: (4, 6, 9, 13, 0, 0, 0, 0, 0, 0, )int: 4, 
int ins: tag: 0, val: 15
STACK: (4, 6, 9, 13, 0, 0, 0, 0, 0, 0, )int: 4, int: 15, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 13, 15, 0, 0, 0, 0, 0, )
int ins: tag: 0, val: 5
STACK: (4, 6, 9, 13, 15, 0, 0, 0, 0, 0, )int: 5, 
int ins: tag: 0, val: 17
STACK: (4, 6, 9, 13, 15, 0, 0, 0, 0, 0, )int: 5, int: 17, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 13, 15, 17, 0, 0, 0, 0, )
int ins: tag: 0, val: 6
STACK: (4, 6, 9, 13, 15, 17, 0, 0, 0, 0, )int: 6, 
int ins: tag: 0, val: 18
STACK: (4, 6, 9, 13, 15, 17, 0, 0, 0, 0, )int: 6, int: 18, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 13, 15, 17, 18, 0, 0, 0, )
int ins: tag: 0, val: 7
STACK: (4, 6, 9, 13, 15, 17, 18, 0, 0, 0, )int: 7, 
int ins: tag: 0, val: 24
STACK: (4, 6, 9, 13, 15, 17, 18, 0, 0, 0, )int: 7, int: 24, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 13, 15, 17, 18, 24, 0, 0, )
int ins: tag: 0, val: 8
STACK: (4, 6, 9, 13, 15, 17, 18, 24, 0, 0, )int: 8, 
int ins: tag: 0, val: 29
STACK: (4, 6, 9, 13, 15, 17, 18, 24, 0, 0, )int: 8, int: 29, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
get global : 0
STACK: (4, 6, 9, 13, 15, 17, 18, 24, 29, 0, )
int ins: tag: 0, val: 9
STACK: (4, 6, 9, 13, 15, 17, 18, 24, 29, 0, )int: 9, 
int ins: tag: 0, val: 35
STACK: (4, 6, 9, 13, 15, 17, 18, 24, 29, 0, )int: 9, int: 35, 
call-op #3 and str: set
STACK: null, 
drop ins
STACK: 
int ins: tag: 0, val: 13
STACK: int: 13, 
calls #1 and ptr: 0x7fdee3a792d4
STACK: int: 13, 
frame ins
STACK: 
get local : 0
STACK: int: 13, 
get global : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 13, 
calls #2 and ptr: 0x7fdee3a7922c
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 13, 
frame ins
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
call-op #1 and str: length
STACK: int: 13, int: 10, 
int ins: tag: 0, val: 0
STACK: int: 13, int: 10, int: 0, 
call-op #2 and str: eq
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a792c8
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
int ins: tag: 0, val: 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
call-op #1 and str: length
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 10, 
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 10, int: 13, 
calls #4 and ptr: 0x7fdee3a79010
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 10, int: 13, 
frame ins
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 10, 
int ins: tag: 0, val: 1
STACK: int: 13, int: 10, int: 1, 
call-op #2 and str: eq
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a791c0
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 10, 
int ins: tag: 0, val: 2
STACK: int: 13, int: 10, int: 2, 
call-op #2 and str: div
STACK: int: 13, int: 5, 
set local : 4 at: 13
STACK: int: 13, int: 5, 
drop ins
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 5, 
call-op #2 and str: add
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 5, 
int ins: tag: 0, val: 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 5, int: 1, 
call-op #2 and str: sub
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 4, 
call-op #2 and str: get
STACK: int: 13, int: 15, 
set local : 5 at: 14
STACK: int: 13, int: 15, 
drop ins
STACK: int: 13, 
get local : 5
STACK: int: 13, int: 15, 
get local : 3
STACK: int: 13, int: 15, int: 13, 
call-op #2 and str: lt
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a79150
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 5, 
get local : 3
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 5, int: 13, 
calls #4 and ptr: 0x7fdee3a79010
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 5, int: 13, 
frame ins
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 5, 
int ins: tag: 0, val: 1
STACK: int: 13, int: 5, int: 1, 
call-op #2 and str: eq
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a791c0
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 5, 
int ins: tag: 0, val: 2
STACK: int: 13, int: 5, int: 2, 
call-op #2 and str: div
STACK: int: 13, int: 2, 
set local : 4 at: 21
STACK: int: 13, int: 2, 
drop ins
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 2, 
call-op #2 and str: add
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, 
int ins: tag: 0, val: 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 1, 
call-op #2 and str: sub
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 1, 
call-op #2 and str: get
STACK: int: 13, int: 6, 
set local : 5 at: 22
STACK: int: 13, int: 6, 
drop ins
STACK: int: 13, 
get local : 5
STACK: int: 13, int: 6, 
get local : 3
STACK: int: 13, int: 6, int: 13, 
call-op #2 and str: lt
STACK: int: 13, int: 1, 
branch tag: 0, ptr: 0x7fdee3a79150
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 0, int: 2, 
call-op #2 and str: add
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, 
get local : 2
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 5, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 5, int: 2, 
call-op #2 and str: sub
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 3, 
get local : 3
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 3, int: 13, 
calls #4 and ptr: 0x7fdee3a79010
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 3, int: 13, 
frame ins
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 3, 
int ins: tag: 0, val: 1
STACK: int: 13, int: 3, int: 1, 
call-op #2 and str: eq
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a791c0
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 3, 
int ins: tag: 0, val: 2
STACK: int: 13, int: 3, int: 2, 
call-op #2 and str: div
STACK: int: 13, int: 1, 
set local : 4 at: 29
STACK: int: 13, int: 1, 
drop ins
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 1, 
call-op #2 and str: add
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, 
int ins: tag: 0, val: 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 1, 
call-op #2 and str: sub
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, 
call-op #2 and str: get
STACK: int: 13, int: 9, 
set local : 5 at: 30
STACK: int: 13, int: 9, 
drop ins
STACK: int: 13, 
get local : 5
STACK: int: 13, int: 9, 
get local : 3
STACK: int: 13, int: 9, int: 13, 
call-op #2 and str: lt
STACK: int: 13, int: 1, 
branch tag: 0, ptr: 0x7fdee3a79150
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 2, int: 1, 
call-op #2 and str: add
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, 
get local : 2
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 3, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 3, int: 1, 
call-op #2 and str: sub
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 2, 
get local : 3
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 2, int: 13, 
calls #4 and ptr: 0x7fdee3a79010
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 2, int: 13, 
frame ins
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 2, 
int ins: tag: 0, val: 1
STACK: int: 13, int: 2, int: 1, 
call-op #2 and str: eq
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a791c0
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 2, 
int ins: tag: 0, val: 2
STACK: int: 13, int: 2, int: 2, 
call-op #2 and str: div
STACK: int: 13, int: 1, 
set local : 4 at: 37
STACK: int: 13, int: 1, 
drop ins
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 1, 
call-op #2 and str: add
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 4, 
int ins: tag: 0, val: 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 4, int: 1, 
call-op #2 and str: sub
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, 
call-op #2 and str: get
STACK: int: 13, int: 13, 
set local : 5 at: 38
STACK: int: 13, int: 13, 
drop ins
STACK: int: 13, 
get local : 5
STACK: int: 13, int: 13, 
get local : 3
STACK: int: 13, int: 13, int: 13, 
call-op #2 and str: lt
STACK: int: 13, null, 
branch tag: 1, ptr: 0x7fdee3a79150
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, 
get local : 4
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 1, 
get local : 3
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 1, int: 13, 
calls #4 and ptr: 0x7fdee3a79010
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, int: 1, int: 13, 
frame ins
STACK: int: 13, 
get local : 2
STACK: int: 13, int: 1, 
int ins: tag: 0, val: 1
STACK: int: 13, int: 1, int: 1, 
call-op #2 and str: eq
STACK: int: 13, int: 1, 
branch tag: 0, ptr: 0x7fdee3a791c0
STACK: int: 13, 
get local : 0
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )
get local : 1
STACK: int: 13, (4, 6, 9, 13, 15, 17, 18, 24, 29, 35, )int: 3, 
call-op #2 and str: get
STACK: int: 13, int: 13, 
get local : 3
STACK: int: 13, int: 13, int: 13, 
call-op #2 and str: eq
STACK: int: 13, int: 1, 
branch tag: 0, ptr: 0x7fdee3a79220
STACK: int: 13, 
get local : 1
STACK: int: 13, int: 3, 
return ins
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a791b0
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a79228
STACK: int: 13, int: 3, 
return ins
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a79228
STACK: int: 13, int: 3, 
return ins
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a79228
STACK: int: 13, int: 3, 
return ins
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a791b0
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a79228
STACK: int: 13, int: 3, 
return ins
STACK: int: 13, int: 3, 
goto ins, ptr: 0x7fdee3a792d0
STACK: int: 13, int: 3, 
return ins
STACK: int: 13, int: 3, 
print: 2 and str: The index of ~ in a is ~.

The index of 13 in a is 3.
STACK: null, 
return ins
